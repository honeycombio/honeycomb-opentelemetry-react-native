
version: '2.1'

orbs:
  android: circleci/android@2.5
  bats: circleci/bats@1.0.0
  macos: circleci/macos@2
  node: circleci/node@7.2.0

executors:
  github:
    docker:
      - image: cimg/base:2025.09

parameters:
  java-version:
    type: integer
    default: 17

filters_main_only: &filters_main_only
  filters:
    tags:
      only: /.*/
    branches:
      only: main

filters_tags_only: &filters_tags_only
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

filters_always: &filters_always
  filters:
    tags:
      only: /.*/

jobs:
  lint_android:
    executor:
      name: android/android-machine
      resource-class: large
      tag: default
    steps:
      - node/install:
          install-yarn: true
          yarn-version: 4.10.3
          node-version: 20.19.0
      - checkout
      - run: yarn install
      - run: make lint-typescript
      - run: sudo apt update
      - run: sudo apt install clang-format
      - run: make lint-c
      - run: make lint-android

  lint_swift:
    macos:
      xcode: 16.2.0
    resource_class: m4pro.medium
    steps:
      - checkout
      - run: make lint-swift

  unit_test:
    executor:
      name: android/android-machine
      resource-class: large
      tag: default
    steps:
      - checkout
      - node/install:
          install-yarn: true
          yarn-version: 4.10.3
          node-version: 20.19.0
      - run: yarn install
      - run: yarn test

  smoke_tests_android:
    executor:
      name: android/android-machine
      resource-class: large
      tag: default
    steps:
      - node/install:
          install-yarn: true
          yarn-version: 4.10.3
          node-version: 20.19.0
      - checkout
      - run: yarn install
      - bats/install
      - run:
          name: What's the BATS?
          command: |
            which bats
            bats --version
      - run:
          name: Install React Native
          working_directory: example
          command: yarn install
      - run:
          name: Start React Native
          working_directory: example
          command: yarn start
          background: true
      - run:
          name: "Start Collector & Mock Server"
          command: make smoke-docker-without-react-native
      - android/change-java-version:
          java-version: << pipeline.parameters.java-version >>
      - android/start-emulator-and-run-tests:
          avd-name: "Pixel_8_API_35"
          system-image: system-images;android-30;default;x86_64
          test-command: make android-circleci-test
          post-emulator-launch-assemble-command: ""
          max-tries: 1
      - store_artifacts:
          path: example/build/outputs/connected_android_test_additional_output
      - store_artifacts:
          path: example/android/build/reports/
      - run:
          name: "Check Smoke Test Assertions"
          command: make smoke-bats

  smoke_tests_ios:
    macos:
      xcode: 16.2.0
    resource_class: m4pro.medium

    steps:
      - node/install:
          install-yarn: true
          yarn-version: 4.10.3
          node-version: 20.19.0
      - attach_workspace:
          at: ./
      - macos/preboot-simulator:
          version: "18.2"
          platform: "iOS"
          device: "iPhone 16"
      - checkout
      - run: brew tap wix/brew
      - run: brew install applesimutils
      - run: yarn install
      - bats/install
      - run:
          name: What's the BATS?
          command: |
            which bats
            bats --version
      - run: xcodebuild -version
      - run:
          name: Install React Native
          working_directory: example
          command: yarn install
      - run:
          name: Start React Native
          working_directory: example
          command: yarn start
          background: true
      - run:
          name: Cocoapods Install
          working_directory: example/ios
          command: pod install
      - run:
          name: Install OTel Collector
          environment:
            COLLECTOR_VERSION: "0.126.0"
          command: |
            curl --proto '=https' --tlsv1.2 -fOL https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v${COLLECTOR_VERSION}/otelcol_${COLLECTOR_VERSION}_darwin_arm64.tar.gz
            tar -xvf otelcol_${COLLECTOR_VERSION}_darwin_arm64.tar.gz
      - run:
          name: Start OTel Collector
          command: touch ./smoke-tests/collector/data.json && ./otelcol --config=./smoke-tests/collector/otel-collector-config.yaml --set="exporters::file::path=./smoke-tests/collector/data.json"
          background: true
      - run:
          name: Start Mock Server
          working_directory: smoke-tests/mock-server
          command: npm install && npm start
          background: true
      - run:
          name: "Run iOS UI Tests"
          command: make ios-test
      - store_artifacts:
          path: smoke-tests/output/build.log
      - store_artifacts:
          path: smoke-tests/output/test.log
      - run:
          name: "Check Smoke Test Assertions"
          command: make smoke-bats

  publish_github:
    executor: github
    steps:
      - run:
          name: "GHR Draft"
          command: ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG}

  publish_npm:
    executor:
      name: android/android-machine
      resource-class: large
      tag: default
    steps:
      - node/install:
          install-yarn: true
          yarn-version: 4.10.3
          node-version: 20.19.0
      - checkout
      - run:
          name: store npm auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: yarn install --frozen-lockfile
      - run: yarn prepare
      - run: npm publish --access public

workflows:
  build:
    jobs:
      - unit_test:
          <<: *filters_always
      - lint_android:
          <<: *filters_always
      - lint_swift:
          <<: *filters_always
      - smoke_tests_android:
          <<: *filters_always
      - smoke_tests_ios:
          <<: *filters_always
      - publish_npm:
          <<: *filters_tags_only
          context: Honeycomb Secrets for Public Repos
          requires:
            - smoke_tests_ios
            - smoke_tests_android
      - publish_github:
          <<: *filters_tags_only
          context: Honeycomb Secrets for Public Repos
          requires:
            - publish_npm
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - unit_test
      - lint_android
      - lint_swift
      - smoke_tests_android
      - smoke_tests_ios

